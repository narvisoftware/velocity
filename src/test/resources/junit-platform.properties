# enable parallel execution
junit.jupiter.execution.parallel.enabled = false

# ?concurrency type:
# 1). example:
#    Configuration parameters to execute top-level classes in parallel but methods in same thread:
#     | junit.jupiter.execution.parallel.enabled = true
#     | junit.jupit er.execution.parallel.mode.default = same_thread
#     | junit.jupiter.execution.parallel.mode.classes.default = concurrent
#    The opposite combination will run all methods within one class in parallel, but top-level classes will run sequentially:
#    Configuration parameters to execute top-level classes sequentially but their methods in parallel:
#     | junit.jupiter.execution.parallel.enabled = true
#     | junit.jupiter.execution.parallel.mode.default = concurrent
#     | junit.jupiter.execution.parallel.mode.classes.default = same_thread
# 2). properties:
#    ? or "same_thread" (value below)
junit.jupiter.execution.parallel.mode.default = concurrent
#    ? or "same_thread" (value below)
junit.jupiter.execution.parallel.mode.classes.default = concurrent 

# ? parallelism
junit.jupiter.execution.parallel.config.strategy = dynamic # Dynamic strategy determines the number of threads  based on the number of processors/cores multiplied by factor parameter (defaults to 1) specified using: junit.jupiter.execution.parallel.config.dynamic.factor
junit.jupiter.execution.parallel.config.dynamic.factor = 2 # number of cores * 2 (config.strategy must be set to dynamic)